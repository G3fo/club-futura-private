{"version":3,"sources":["assets/logo.png","components/navBar.js","http-common.js","services/expensesService.js","components/alertService.js","pages/expensesList.js","services/productsService.js","pages/productsList.js","components/productEdit.js","App.js","index.js"],"names":["NavBar","divStyle","textAlign","Container","Row","style","marginTop","marginBottom","Col","to","className","width","src","logo","alt","axios","create","baseURL","headers","page","http","get","id","console","log","query","by","data","post","put","delete","ConfirmAlertService","title","text","confirmButton","icon","Promise","resolve","reject","Swal","fire","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","ExpensesList","useState","expenses","setExpenses","searchName","setSearchName","searchArtist","setSearchArtist","artists","setArtists","loading","setLoading","show","setShow","useForm","register","handleSubmit","errors","formState","handleClose","useEffect","retrieveExpenses","retrieveArtists","ExpensesDataService","getAll","response","getArtists","concat","find","catch","e","alertRedirect","expense","finalSwal","name","showConfirmButton","handleDelete","a","deleteExpense","restaurant_id","handleAdd","createExpense","handleSell","selling","state","_id","updateExpense","Modal","onHide","backdrop","keyboard","centered","Header","Title","onSubmit","Body","for","placeholder","required","maxLength","Footer","Button","variant","onClick","onChange","target","map","artist","description","retail","ProductsList","products","setProducts","color","setColor","retrieveProducts","ProductsDataService","sortedProducts","sort","b","productsByArtists","Array","from","reduce","m","o","set","Map","values","createProduct","product","res","updateProduct","buttonStyle","alignItems","buttonStyleRight","newData","margin","onChangeComplete","c","hex","display","padding","flexWrap","productsArrays","Accordion","Card","Toggle","as","eventKey","borderRadius","backgroundColor","marginLeft","Collapse","paddingInline","paddingTop","paddingBottom","price","ProductCard","props","history","useHistory","useParams","setProduct","reset","handleUpdate","productData","push","deleteProduct","justifyContent","defaultValue","App","exact","path","component","Expenses","Products","Product","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0e68e35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6c16c9ec.png\";","import { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nconst NavBar = () => {\r\n    const divStyle = { textAlign: \"center\" };\r\n    const style = { marginTop: \"0.8em\", marginBottom: \"0.8em\" };\r\n    return (\r\n        <Container>\r\n            <Row style={style}>\r\n                <Col style={divStyle}>\r\n                    <Link to=\"/products\">\r\n                        <button className=\"btn btn-outline-dark\">Obras</button>\r\n                    </Link>\r\n                </Col>\r\n                <Col className=\"col\" style={divStyle}>\r\n                    <img width=\"45em\" src={logo} alt=\"logo\" />\r\n                </Col>\r\n\r\n                <Col style={divStyle}>\r\n                    {/* <Link to=\"/expenses\"> */}\r\n                    <button className=\"btn btn-outline-dark\">Gastos</button>\r\n                    {/* </Link> */}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://futurabackend.herokuapp.com/api/v1/products\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n    },\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass ExpensesDataService {\r\n    getAll(page = 0) {\r\n        return http.get(`?page=${page}`);\r\n    }\r\n\r\n    get(id) {\r\n        console.log(id);\r\n        return http.get(`/${id}`);\r\n    }\r\n\r\n    find(query, by = \"name\", page = 0) {\r\n        return http.get(`?${by}=${query}&page=${page}`);\r\n    }\r\n\r\n    createProduct(data) {\r\n        console.log(data);\r\n        return http.post(\"/\", data);\r\n    }\r\n\r\n    updateProduct(id, data) {\r\n        return http.put(`/${id}`, data);\r\n    }\r\n\r\n    deleteProduct(id) {\r\n        return http.delete(`/${id}`);\r\n    }\r\n\r\n    getArtists(id) {\r\n        return http.get(`/artists`);\r\n    }\r\n}\r\n\r\nexport default new ExpensesDataService();\r\n","import Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Alert = (title, text, icon, close = false, path = \"\") => {\r\n    const history = useHistory();\r\n    debugger;\r\n    const finalSwal = {\r\n        type: icon,\r\n        title: title,\r\n        text: text,\r\n        showConfirmButton: true,\r\n    };\r\n\r\n    if (close) {\r\n        Swal.fire(finalSwal).then(() => history.push(path));\r\n    } else {\r\n        Swal.fire(finalSwal);\r\n    }\r\n};\r\n\r\nexport const ConfirmAlertService = (\r\n    title,\r\n    text,\r\n    confirmButton = \"Estoy seguro\",\r\n    icon\r\n) => {\r\n    return new Promise((resolve, reject) => {\r\n        Swal.fire({\r\n            title,\r\n            text,\r\n            type: icon,\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: confirmButton,\r\n            cancelButtonText: \"No\",\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                resolve(true);\r\n            }\r\n        });\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ExpensesDataService from \"../services/expensesService\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ConfirmAlertService } from \"../components/alertService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingMask from \"react-loadingmask\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"react-loadingmask/dist/react-loadingmask.css\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ExpensesList = () => {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [searchName, setSearchName] = useState(\"\");\r\n    const [searchArtist, setSearchArtist] = useState(\"\");\r\n    const [artists, setArtists] = useState([\"Todos\"]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const onSubmit = (data) => handleAdd(data);\r\n    console.log(errors);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        retrieveExpenses();\r\n        retrieveArtists();\r\n    }, []);\r\n\r\n    const retrieveExpenses = () => {\r\n        setLoading(true);\r\n        ExpensesDataService.getAll().then((response) => {\r\n            setExpenses(response.data.expenses);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const retrieveArtists = () => {\r\n        ExpensesDataService.getArtists().then((response) => {\r\n            setArtists([\"Todos\"].concat(response.data));\r\n        });\r\n    };\r\n\r\n    const onChangeSearchName = (e) => {\r\n        const searchName = e.target.value;\r\n        setSearchName(searchName);\r\n    };\r\n\r\n    const onChangeSearchArtist = (e) => {\r\n        const searchArtist = e.target.value;\r\n        setSearchArtist(searchArtist);\r\n    };\r\n\r\n    const refreshList = () => {\r\n        retrieveExpenses();\r\n    };\r\n\r\n    const find = (query, by) => {\r\n        setLoading(true);\r\n        ExpensesDataService.find(query, by)\r\n            .then((response) => {\r\n                setExpenses(response.data.expenses);\r\n                setLoading(false);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const findByName = () => {\r\n        find(searchName, \"name\");\r\n    };\r\n\r\n    const findByArtist = () => {\r\n        if (searchArtist === \"All Artists\") {\r\n            refreshList();\r\n        } else {\r\n            find(searchArtist, \"artist\");\r\n        }\r\n    };\r\n\r\n    const alertRedirect = (expense) => {\r\n        const finalSwal = {\r\n            title: \"Listo\",\r\n            text: `Se eliminó ${expense.name} exitosamente`,\r\n            showConfirmButton: true,\r\n        };\r\n\r\n        Swal.fire(finalSwal).then(() => retrieveExpenses());\r\n    };\r\n\r\n    const handleDelete = async (expense) => {\r\n        const res = await ConfirmAlertService(\r\n            `¿Desea eliminar el gasto ${expense.name}?`,\r\n            \"Esto es permanente\",\r\n            \"question\"\r\n        );\r\n\r\n        if (res) {\r\n            ExpensesDataService.deleteExpense(expense.restaurant_id)\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    alertRedirect(expense);\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleAdd = async (data) => {\r\n        ExpensesDataService.createExpense(data)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                Swal.fire({\r\n                    title: \"Agregado!\",\r\n                    icon: \"success\",\r\n                    confirmButtonText: \"Ok\",\r\n                }).then(() => retrieveExpenses());\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSell = async (expense) => {\r\n        const data = {\r\n            selling: true,\r\n            state: \"Vendido\",\r\n        };\r\n        const { _id } = expense;\r\n        ExpensesDataService.updateExpense(_id, data)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                Swal.fire({\r\n                    title: \"Vendido!\",\r\n                    icon: \"success\",\r\n                    confirmButtonText: \"Ok\",\r\n                }).then(() => retrieveExpenses());\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <LoadingMask loading={loading} text={\"loading...\"}>\r\n            <>\r\n                <Modal\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Nuevo gasto</Modal.Title>\r\n                    </Modal.Header>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Modal.Body>\r\n                            <label className=\"col-form-label\" for=\"inputName\">\r\n                                Nombre\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Nombre\"\r\n                                className=\"form-control\"\r\n                                id=\"inputName\"\r\n                                {...register(\"name\", {\r\n                                    required: true,\r\n                                    maxLength: 80,\r\n                                })}\r\n                            />\r\n                            <label className=\"col-form-label\" for=\"inputArtist\">\r\n                                Artista\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Artista\"\r\n                                className=\"form-control\"\r\n                                id=\"inputArtist\"\r\n                                {...register(\"artist\", { required: true })}\r\n                            />\r\n                            <label\r\n                                className=\"col-form-label\"\r\n                                for=\"inputDescription\"\r\n                            >\r\n                                Descripción\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Descripción\"\r\n                                className=\"form-control\"\r\n                                id=\"inputDescription\"\r\n                                {...register(\"description\", {\r\n                                    maxLength: 80,\r\n                                })}\r\n                            />\r\n                            <label className=\"col-form-label\" for=\"inputPrice\">\r\n                                Precio\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Precio\"\r\n                                className=\"form-control\"\r\n                                id=\"inputPrice\"\r\n                                {...register(\"price\", { required: true })}\r\n                            />\r\n                            <label className=\"col-form-label\" for=\"inputState\">\r\n                                Estado\r\n                            </label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"inputState\"\r\n                                {...register(\"state\", { required: true })}\r\n                            >\r\n                                <option value=\"Disponible\">Disponible</option>\r\n                                <option value=\"No disponible\">\r\n                                    No disponible\r\n                                </option>\r\n                                <option value=\"Vendido\">Vendido</option>\r\n                            </select>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Cerrar\r\n                            </Button>\r\n                            <input className=\"btn btn-primary\" type=\"submit\" />\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal>\r\n            </>\r\n            <div>\r\n                <div className=\"row pb-1\">\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Agregar\r\n                    </Button>\r\n                    <div\r\n                        className=\"input-group col-lg-4\"\r\n                        style={{ marginBottom: \"0.3em\" }}\r\n                    >\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Search by name\"\r\n                            value={searchName}\r\n                            onChange={onChangeSearchName}\r\n                        />\r\n\r\n                        <div className=\"input-group-append\">\r\n                            <button\r\n                                className=\"btn btn-outline-secondary\"\r\n                                type=\"button\"\r\n                                onClick={findByName}\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <div className=\"input-group col-lg-4\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            onChange={onChangeSearchArtist}\r\n                        >\r\n                            {artists.map((artist) => {\r\n                                return <option value={artist}>{artist}</option>;\r\n                            })}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <button\r\n                                className=\"btn btn-outline-secondary\"\r\n                                type=\"button\"\r\n                                onClick={findByArtist}\r\n                            >\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {expenses.map((expense) => {\r\n                        return (\r\n                            <div className=\"col-lg-4 pb-1\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title text-center\">\r\n                                            {expense.name}\r\n                                        </h5>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Artista: </strong>\r\n                                            {expense.artist}\r\n                                            <br />\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Descripción: </strong>\r\n                                            {expense.description}\r\n                                            <br />\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Precio: </strong>\r\n                                            {expense.retail}\r\n                                            <br />\r\n                                        </p>\r\n                                        <p className=\"card-text\">\r\n                                            <strong>Estado: </strong>\r\n                                            {expense.state}\r\n                                            <br />\r\n                                        </p>\r\n                                        <div className=\"row justify-content-between\">\r\n                                            <div className=\"col-auto mr-auto\">\r\n                                                <button\r\n                                                    className=\"btn btn-success col-auto\"\r\n                                                    onClick={() =>\r\n                                                        handleSell(expense)\r\n                                                    }\r\n                                                >\r\n                                                    Vender\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"col-auto\">\r\n                                                <Link\r\n                                                    to={\r\n                                                        \"/expense/\" +\r\n                                                        expense._id\r\n                                                    }\r\n                                                    className=\"btn btn-primary\"\r\n                                                >\r\n                                                    Editar\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"col-auto\">\r\n                                                <button\r\n                                                    className=\"btn btn-danger col-auto\"\r\n                                                    onClick={() =>\r\n                                                        handleDelete(expense)\r\n                                                    }\r\n                                                >\r\n                                                    Eliminar\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </LoadingMask>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import http from \"../http-common\";\r\n\r\nclass ProductsDataService {\r\n    getAll(page = 0) {\r\n        return http.get(`?page=${page}`);\r\n    }\r\n\r\n    get(id) {\r\n        console.log(id);\r\n        return http.get(`/${id}`);\r\n    }\r\n\r\n    find(query, by = \"name\", page = 0) {\r\n        return http.get(`?${by}=${query}&page=${page}`);\r\n    }\r\n\r\n    createProduct(data) {\r\n        console.log(data);\r\n        return http.post(\"/\", data);\r\n    }\r\n\r\n    updateProduct(id, data) {\r\n        return http.put(`/${id}`, data);\r\n    }\r\n\r\n    deleteProduct(id) {\r\n        return http.delete(`/${id}`);\r\n    }\r\n\r\n    getArtists(id) {\r\n        return http.get(`/artists`);\r\n    }\r\n}\r\n\r\nexport default new ProductsDataService();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProductsDataService from \"../services/productsService\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ConfirmAlertService } from \"../components/alertService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingMask from \"react-loadingmask\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Modal,\r\n    Row,\r\n    Accordion,\r\n    Card,\r\n} from \"react-bootstrap\";\r\nimport \"react-loadingmask/dist/react-loadingmask.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { CirclePicker } from \"react-color\";\r\n\r\nconst ProductsList = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [searchArtist, setSearchArtist] = useState(\"\");\r\n    const [artists, setArtists] = useState([\"TODOS\"]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [color, setColor] = useState(\"#f44336\");\r\n\r\n    const handleChangeComplete = (c) => {\r\n        setColor(c.hex);\r\n    };\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const onSubmit = (data) => {\r\n        const newData = data;\r\n        newData.color = color;\r\n        handleAdd(newData);\r\n    };\r\n    if (errors) {\r\n        console.log(errors);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        retrieveProducts();\r\n        retrieveArtists();\r\n    }, []);\r\n\r\n    const retrieveProducts = () => {\r\n        setLoading(true);\r\n        ProductsDataService.getAll().then((response) => {\r\n            const sortedProducts = response.data.products.sort(function (a, b) {\r\n                if (a.artist < b.artist) {\r\n                    return -1;\r\n                }\r\n                if (a.artist > b.artist) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n            //REFACTORING 1 ARRAY POR ARTISTA\r\n            const productsByArtists = Array.from(\r\n                sortedProducts\r\n                    .reduce(\r\n                        (m, o) =>\r\n                            m.set(o.artist, [...(m.get(o.artist) || []), o]),\r\n                        new Map()\r\n                    )\r\n                    .values(),\r\n                (a) => a\r\n            );\r\n\r\n            setProducts(productsByArtists);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const retrieveArtists = () => {\r\n        ProductsDataService.getArtists().then((response) => {\r\n            setArtists([\"TODOS\"].concat(response.data));\r\n        });\r\n    };\r\n\r\n    const onChangeSearchArtist = (e) => {\r\n        const searchArtist = e.target.value;\r\n        setSearchArtist(searchArtist);\r\n    };\r\n\r\n    const refreshList = () => {\r\n        retrieveProducts();\r\n    };\r\n\r\n    const find = (query, by) => {\r\n        setLoading(true);\r\n        ProductsDataService.find(query, by)\r\n            .then((response) => {\r\n                const sortedProducts = response.data.products.sort(function (\r\n                    a,\r\n                    b\r\n                ) {\r\n                    if (a.artist < b.artist) {\r\n                        return -1;\r\n                    }\r\n                    if (a.artist > b.artist) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n                //REFACTORING 1 ARRAY POR ARTISTA\r\n                const productsByArtists = Array.from(\r\n                    sortedProducts\r\n                        .reduce(\r\n                            (m, o) =>\r\n                                m.set(o.artist, [\r\n                                    ...(m.get(o.artist) || []),\r\n                                    o,\r\n                                ]),\r\n                            new Map()\r\n                        )\r\n                        .values(),\r\n                    (a) => a\r\n                );\r\n\r\n                setProducts(productsByArtists);\r\n                setLoading(false);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const findByArtist = () => {\r\n        console.log(searchArtist);\r\n        if (searchArtist === \"TODOS\") {\r\n            refreshList();\r\n        } else {\r\n            find(searchArtist, \"artist\");\r\n        }\r\n    };\r\n\r\n    const handleAdd = async (data) => {\r\n        debugger;\r\n\r\n        ProductsDataService.createProduct(data)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                Swal.fire({\r\n                    title: \"Agregado!\",\r\n                    icon: \"success\",\r\n                    confirmButtonText: \"Ok\",\r\n                }).then(() => retrieveProducts());\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSell = async (product) => {\r\n        const res = await ConfirmAlertService(\r\n            `Vender ${product.name}?`,\r\n            \"\",\r\n            \"Si\",\r\n            \"question\"\r\n        );\r\n\r\n        const { state } = product;\r\n        const newState = state - 1;\r\n        const data = {\r\n            selling: true,\r\n            state: newState,\r\n        };\r\n        const { _id } = product;\r\n        if (res) {\r\n            ProductsDataService.updateProduct(_id, data)\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    Swal.fire({\r\n                        title: \"Vendido!\",\r\n                        icon: \"success\",\r\n                        confirmButtonText: \"Ok\",\r\n                    }).then(() => retrieveProducts());\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    };\r\n\r\n    const buttonStyle = { alignItems: \"center\" };\r\n    const buttonStyleRight = { alignItems: \"center\" };\r\n    console.log(products);\r\n\r\n    return (\r\n        <LoadingMask loading={loading} text={\"loading...\"}>\r\n            <Container>\r\n                <>\r\n                    <Modal\r\n                        show={show}\r\n                        onHide={handleClose}\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                        centered\r\n                    >\r\n                        <Modal.Header>\r\n                            <Modal.Title>Nuevo producto</Modal.Title>\r\n                        </Modal.Header>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Modal.Body>\r\n                                <div style={{ margin: \"auto\" }}>\r\n                                    <CirclePicker\r\n                                        color={color}\r\n                                        onChangeComplete={handleChangeComplete}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    style={{ display: \"none\" }}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputColor\"\r\n                                    value={color}\r\n                                    {...register(\"color\", {\r\n                                        required: true,\r\n                                        maxLength: 80,\r\n                                    })}\r\n                                />\r\n\r\n                                <label\r\n                                    className=\"col-form-label\"\r\n                                    for=\"inputArtist\"\r\n                                >\r\n                                    Artista\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Artista\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputArtist\"\r\n                                    {...register(\"artist\", { required: true })}\r\n                                />\r\n\r\n                                <label\r\n                                    className=\"col-form-label\"\r\n                                    for=\"inputName\"\r\n                                >\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nombre\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputName\"\r\n                                    {...register(\"name\", {\r\n                                        required: true,\r\n                                        maxLength: 80,\r\n                                    })}\r\n                                />\r\n\r\n                                <label\r\n                                    className=\"col-form-label\"\r\n                                    for=\"inputDescription\"\r\n                                >\r\n                                    Descripción\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Descripción\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputDescription\"\r\n                                    {...register(\"description\", {\r\n                                        maxLength: 80,\r\n                                    })}\r\n                                />\r\n                                <label\r\n                                    className=\"col-form-label\"\r\n                                    for=\"inputPrice\"\r\n                                >\r\n                                    Precio\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    placeholder=\"Precio\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPrice\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                />\r\n                                <label\r\n                                    className=\"col-form-label\"\r\n                                    for=\"inputState\"\r\n                                >\r\n                                    Disponibles\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    placeholder=\"Unidades\"\r\n                                    className=\"form-control\"\r\n                                    id=\"inputPrice\"\r\n                                    {...register(\"state\", { required: true })}\r\n                                />\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button\r\n                                    variant=\"secondary\"\r\n                                    onClick={handleClose}\r\n                                >\r\n                                    Cerrar\r\n                                </Button>\r\n                                <input\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"submit\"\r\n                                />\r\n                            </Modal.Footer>\r\n                        </form>\r\n                    </Modal>\r\n                </>\r\n\r\n                <Container style={{ padding: \"0\", flexWrap: \"nowrap\" }}>\r\n                    <Row className=\"justify-content-between\">\r\n                        <div className=\"col-10\">\r\n                            <div className=\"input-group\">\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    onChange={onChangeSearchArtist}\r\n                                >\r\n                                    {artists.map((artist) => {\r\n                                        return (\r\n                                            <option value={artist}>\r\n                                                {artist}\r\n                                            </option>\r\n                                        );\r\n                                    })}\r\n                                </select>\r\n                                <div className=\"input-group-append\">\r\n                                    <button\r\n                                        className=\"btn btn-secondary\"\r\n                                        type=\"button\"\r\n                                        onClick={findByArtist}\r\n                                    >\r\n                                        Filtrar\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2\" style={{ textAlign: \"right\" }}>\r\n                            <Button variant=\"warning\" onClick={handleShow}>\r\n                                <h5>\r\n                                    <strong> + </strong>\r\n                                </h5>\r\n                            </Button>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n                <Container>\r\n                    <div className=\"row\">\r\n                        {\r\n                            //REFACTORING 1 ARRAY POR ARTISTA\r\n                        }{\" \"}\r\n                        {products.map((productsArrays) => {\r\n                            return (\r\n                                <Accordion style={{ padding: \"0\" }}>\r\n                                    <Card>\r\n                                        <Accordion.Toggle\r\n                                            as={Card.Header}\r\n                                            eventKey=\"0\"\r\n                                        >\r\n                                            <Row>\r\n                                                <div\r\n                                                    className=\"col-1\"\r\n                                                    style={{\r\n                                                        borderRadius: \"5px\",\r\n                                                        backgroundColor:\r\n                                                            productsArrays[0]\r\n                                                                .color,\r\n                                                        padding: \"0\",\r\n                                                        marginLeft: \"10px\",\r\n                                                    }}\r\n                                                ></div>\r\n                                                <h5 className=\"col\">\r\n                                                    <strong>\r\n                                                        {\r\n                                                            productsArrays[0]\r\n                                                                .artist\r\n                                                        }\r\n                                                    </strong>\r\n                                                </h5>\r\n                                            </Row>\r\n                                        </Accordion.Toggle>\r\n                                        <Accordion.Collapse eventKey=\"0\">\r\n                                            <Card.Body\r\n                                                style={{ padding: \"8px\" }}\r\n                                            >\r\n                                                {productsArrays.map(\r\n                                                    (product) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                className=\"card container\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        \"0.2em\",\r\n                                                                    marginBottom:\r\n                                                                        \"0.2em\",\r\n                                                                    paddingInline:\r\n                                                                        \"12px\",\r\n                                                                }}\r\n                                                            >\r\n                                                                <div\r\n                                                                    className=\"card-header row\"\r\n                                                                    style={{\r\n                                                                        padding:\r\n                                                                            \"12px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <h5\r\n                                                                        className=\"col card-title\"\r\n                                                                        style={{\r\n                                                                            marginBottom:\r\n                                                                                \"0\",\r\n                                                                            padding:\r\n                                                                                \"0\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>\r\n                                                                            {\r\n                                                                                product.name\r\n                                                                            }\r\n                                                                        </strong>\r\n                                                                    </h5>\r\n\r\n                                                                    {product.state !==\r\n                                                                        0 && (\r\n                                                                        <div\r\n                                                                            className=\"d-flex col-2\"\r\n                                                                            style={\r\n                                                                                buttonStyleRight\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <Link\r\n                                                                                className=\"badge rounded-pill bg-light text-center\"\r\n                                                                                onClick={() =>\r\n                                                                                    handleSell(\r\n                                                                                        product\r\n                                                                                    )\r\n                                                                                }\r\n                                                                            >\r\n                                                                                Vender\r\n                                                                            </Link>\r\n                                                                        </div>\r\n                                                                    )}\r\n\r\n                                                                    <div\r\n                                                                        className=\"d-flex col-2 \"\r\n                                                                        style={\r\n                                                                            buttonStyle\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <Link\r\n                                                                            to={\r\n                                                                                \"/product/\" +\r\n                                                                                product._id\r\n                                                                            }\r\n                                                                            className=\"badge rounded-pill bg-light text-center\"\r\n                                                                        >\r\n                                                                            Editar\r\n                                                                        </Link>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className=\"card-body\"\r\n                                                                    style={{\r\n                                                                        padding:\r\n                                                                            \"0\",\r\n                                                                        paddingTop:\r\n                                                                            \"5px\",\r\n                                                                        paddingBottom:\r\n                                                                            \"5px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <div className=\"row justify-content-between\">\r\n                                                                        <div className=\"col-auto\">\r\n                                                                            {\r\n                                                                                product.description\r\n                                                                            }{\" \"}\r\n                                                                            <br />\r\n                                                                            Disponibles:\r\n                                                                            {\r\n                                                                                product.state\r\n                                                                            }\r\n                                                                            <br />\r\n                                                                        </div>\r\n                                                                        <div className=\"col-auto\">\r\n                                                                            Precio:\r\n                                                                            $\r\n                                                                            {\r\n                                                                                product.price\r\n                                                                            }\r\n                                                                            <br />\r\n                                                                            Final:\r\n                                                                            $\r\n                                                                            {\r\n                                                                                product.retail\r\n                                                                            }\r\n                                                                            <br />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        );\r\n                                                    }\r\n                                                )}\r\n                                            </Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                                </Accordion>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </Container>\r\n            </Container>\r\n            <br />\r\n        </LoadingMask>\r\n    );\r\n};\r\n\r\nexport default ProductsList;\r\n// {\r\n// productsArrays.map((product) => {\r\n//     return (\r\n//         <div\r\n//             className=\"card\"\r\n//             style={{\r\n//                 marginTop: \"0.2em\",\r\n//                 marginBottom: \"0.2em\",\r\n//             }}\r\n//         >\r\n//             <div\r\n//                 className=\"card-header row\"\r\n//                 style={{ padding: \"12px\" }}\r\n//             >\r\n//                 <div\r\n//                     className=\"col-1\"\r\n//                     style={{\r\n//                         borderRadius: \"5px\",\r\n//                         backgroundColor:\r\n//                             product.color,\r\n//                         padding: \"0\",\r\n//                     }}\r\n//                 ></div>\r\n\r\n//                 <h5\r\n//                     className=\"col card-title\"\r\n//                     style={{ marginBottom: \"0\" }}\r\n//                 >\r\n//                     <strong>\r\n//                         {product.artist}\r\n//                     </strong>\r\n//                 </h5>\r\n\r\n//                 {product.state !== 0 && (\r\n//                     <div\r\n//                         className=\"d-flex col-2\"\r\n//                         style={buttonStyleRight}\r\n//                     >\r\n//                         <Link\r\n//                             className=\"badge rounded-pill bg-light text-center\"\r\n//                             onClick={() =>\r\n//                                 handleSell(product)\r\n//                             }\r\n//                         >\r\n//                             Vender\r\n//                         </Link>\r\n//                     </div>\r\n//                 )}\r\n\r\n//                 <div\r\n//                     className=\"d-flex col-2 \"\r\n//                     style={buttonStyle}\r\n//                 >\r\n//                     <Link\r\n//                         to={\r\n//                             \"/product/\" +\r\n//                             product._id\r\n//                         }\r\n//                         className=\"badge rounded-pill bg-light text-center\"\r\n//                     >\r\n//                         Editar\r\n//                     </Link>\r\n//                 </div>\r\n//             </div>\r\n//             <div\r\n//                 className=\"card-body\"\r\n//                 style={{\r\n//                     padding: \"0\",\r\n//                     paddingTop: \"5px\",\r\n//                     paddingBottom: \"5px\",\r\n//                 }}\r\n//             >\r\n//                 <div className=\"row\">\r\n//                     <strong>{product.name}</strong>\r\n//                 </div>\r\n//                 <div className=\"row justify-content-between\">\r\n//                     <div className=\"col-auto\">\r\n//                         {product.description} <br />\r\n//                         Disponibles:\r\n//                         {product.state}\r\n//                         <br />\r\n//                     </div>\r\n//                     <div className=\"col-auto\">\r\n//                         Precio: ${product.price}\r\n//                         <br />\r\n//                         Final: ${product.retail}\r\n//                         <br />\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// });\r\n// }\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport ProductsDataService from \"../services/productsService\";\r\nimport { ConfirmAlertService } from \"../components/alertService\";\r\nimport LoadingMask from \"react-loadingmask\";\r\nimport \"react-loadingmask/dist/react-loadingmask.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { CirclePicker } from \"react-color\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ProductCard = (props) => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const [product, setProduct] = useState({});\r\n    const [color, setColor] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const handleChangeComplete = (color) => {\r\n        setColor(color.hex);\r\n    };\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        const newData = data;\r\n        newData.color = color;\r\n        handleUpdate(newData);\r\n    };\r\n    if (errors) {\r\n        console.log(errors);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ProductsDataService.get(id)\r\n            .then((response) => {\r\n                setProduct(response.data);\r\n                setColor(response.data.color);\r\n                setLoading(false);\r\n                reset({\r\n                    state: response.data.state,\r\n                });\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }, [id, reset]);\r\n\r\n    const handleUpdate = async (data) => {\r\n        const productData = {\r\n            artist: data.artist ? data.artist : product.artist,\r\n            description: data.description\r\n                ? data.description\r\n                : product.description,\r\n            name: data.name ? data.name : product.name,\r\n            price: data.price ? data.price : product.price,\r\n            state: data.state ? data.state : product.state,\r\n            color: data.color ? data.color : product.color,\r\n        };\r\n        ProductsDataService.updateProduct(id, productData)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                Swal.fire({\r\n                    title: \"Editado!\",\r\n                    icon: \"success\",\r\n                    confirmButtonText: \"Ok\",\r\n                }).then(() => history.push(\"/\"));\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleDelete = async (product) => {\r\n        const res = await ConfirmAlertService(\r\n            `¿Eliminar ${product.name}?`,\r\n            \"Esto es permanente\",\r\n            \"Eliminar\",\r\n            \"question\"\r\n        );\r\n        const { _id } = product;\r\n        if (res) {\r\n            ProductsDataService.deleteProduct(_id)\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    alertRedirect(product);\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n    };\r\n\r\n    const alertRedirect = (product) => {\r\n        const finalSwal = {\r\n            title: \"Listo\",\r\n            text: `Se eliminó ${product.name} exitosamente`,\r\n            showConfirmButton: true,\r\n        };\r\n\r\n        Swal.fire(finalSwal).then(() => history.push(\"/products\"));\r\n    };\r\n\r\n    return (\r\n        <LoadingMask loading={loading} text={\"loading...\"}>\r\n            <div>\r\n                {product ? (\r\n                    <div className=\"card container\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <div\r\n                                className=\"d-flex justify-content-center\"\r\n                                style={{ margin: \"auto\", padding: \"30px\" }}\r\n                            >\r\n                                <CirclePicker\r\n                                    color={color}\r\n                                    onChangeComplete={handleChangeComplete}\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                        alignItems: \"center\",\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <input\r\n                                style={{ display: \"none\" }}\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"inputColor\"\r\n                                defaultValue={product.color}\r\n                                {...register(\"color\", {\r\n                                    maxLength: 80,\r\n                                })}\r\n                            />\r\n                            <label className=\"col-form-label\">Artista</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue={product.artist}\r\n                                className=\"form-control\"\r\n                                id=\"inputArtist\"\r\n                                {...register(\"artist\", {})}\r\n                            />\r\n                            <label className=\"col-form-label\">Obra</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue={product.name}\r\n                                className=\"form-control\"\r\n                                id=\"inputName\"\r\n                                {...register(\"name\", {\r\n                                    maxLength: 80,\r\n                                })}\r\n                            />\r\n                            <label\r\n                                className=\"col-form-label\"\r\n                                for=\"inputDescription\"\r\n                            >\r\n                                Descripción\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                defaultValue={product.description}\r\n                                className=\"form-control\"\r\n                                id=\"inputDescription\"\r\n                                {...register(\"description\", {\r\n                                    maxLength: 80,\r\n                                })}\r\n                            />\r\n                            <label className=\"col-form-label\">Precio</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                defaultValue={product.price}\r\n                                className=\"form-control\"\r\n                                id=\"inputPrice\"\r\n                                {...register(\"price\", {})}\r\n                            />\r\n                            <label className=\"col-form-label\">\r\n                                Disponibles\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                defaultValue={product.state}\r\n                                className=\"form-control\"\r\n                                id=\"inputPrice\"\r\n                                {...register(\"state\", {})}\r\n                            />\r\n                            <div\r\n                                className=\" row justify-content-between\"\r\n                                style={{ padding: \"20px\" }}\r\n                            >\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-danger col-4\"\r\n                                    onClick={() => handleDelete(product)}\r\n                                >\r\n                                    Eliminar\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-success col-4\"\r\n                                    type=\"submit\"\r\n                                    value=\"Actualizar\"\r\n                                >\r\n                                    Actualizar\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </div>\r\n        </LoadingMask>\r\n    );\r\n};\r\n\r\nexport default ProductCard;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/navBar\";\nimport Expenses from \"./pages/expensesList\";\nimport Products from \"./pages/productsList\";\nimport Product from \"./components/productEdit\";\n\nfunction App() {\n    return (\n        <Router>\n            <NavBar />\n            <Switch>\n                <Route exact path=\"/expenses\" component={Expenses}></Route>\n                <Route exact path=\"/products\" component={Products}></Route>\n                <Route exact path=\"/product/:id\" component={Product}></Route>\n                <Route path=\"/\" component={Products}></Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootswatch/dist/minty/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}